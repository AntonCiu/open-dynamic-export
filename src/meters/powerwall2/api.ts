import { z } from 'zod';

export const meterAggregatesSchema = z.object({
    site: z.object({
        last_communication_time: z.string(),
        instant_power: z.number(),
        instant_reactive_power: z.number(),
        instant_apparent_power: z.number(),
        frequency: z.number(),
        energy_exported: z.number(),
        energy_imported: z.number(),
        instant_average_voltage: z.number(),
        instant_average_current: z.number(),
        i_a_current: z.number(),
        i_b_current: z.number(),
        i_c_current: z.number(),
        last_phase_voltage_communication_time: z.string(),
        last_phase_power_communication_time: z.string(),
        last_phase_energy_communication_time: z.string(),
        timeout: z.number(),
        num_meters_aggregated: z.number(),
        instant_total_current: z.number(),
    }),
    battery: z.object({
        last_communication_time: z.string(),
        instant_power: z.number(),
        instant_reactive_power: z.number(),
        instant_apparent_power: z.number(),
        frequency: z.number(),
        energy_exported: z.number(),
        energy_imported: z.number(),
        instant_average_voltage: z.number(),
        instant_average_current: z.number(),
        i_a_current: z.number(),
        i_b_current: z.number(),
        i_c_current: z.number(),
        last_phase_voltage_communication_time: z.string(),
        last_phase_power_communication_time: z.string(),
        last_phase_energy_communication_time: z.string(),
        timeout: z.number(),
        num_meters_aggregated: z.number(),
        instant_total_current: z.number(),
    }),
    load: z.object({
        last_communication_time: z.string(),
        instant_power: z.number(),
        instant_reactive_power: z.number(),
        instant_apparent_power: z.number(),
        frequency: z.number(),
        energy_exported: z.number(),
        energy_imported: z.number(),
        instant_average_voltage: z.number(),
        instant_average_current: z.number(),
        i_a_current: z.number(),
        i_b_current: z.number(),
        i_c_current: z.number(),
        last_phase_voltage_communication_time: z.string(),
        last_phase_power_communication_time: z.string(),
        last_phase_energy_communication_time: z.string(),
        timeout: z.number(),
        instant_total_current: z.number(),
    }),
    solar: z.object({
        last_communication_time: z.string(),
        instant_power: z.number(),
        instant_reactive_power: z.number(),
        instant_apparent_power: z.number(),
        frequency: z.number(),
        energy_exported: z.number(),
        energy_imported: z.number(),
        instant_average_voltage: z.number(),
        instant_average_current: z.number(),
        i_a_current: z.number(),
        i_b_current: z.number(),
        i_c_current: z.number(),
        last_phase_voltage_communication_time: z.string(),
        last_phase_power_communication_time: z.string(),
        last_phase_energy_communication_time: z.string(),
        timeout: z.number(),
        num_meters_aggregated: z.number(),
        instant_total_current: z.number(),
    }),
});

export const systemStatusSoeSchema = z.object({ percentage: z.number() });

export const metersSiteSchema = z.array(
    z.object({
        id: z.number(),
        location: z.string(),
        type: z.string(),
        cts: z.array(z.boolean()),
        inverted: z.array(z.boolean()),
        connection: z.object({
            short_id: z.string(),
            device_serial: z.string(),
            https_conf: z.object({}).optional(),
        }),
        enable_grid_event_logging: z.boolean().optional(),
        Cached_readings: z.object({
            last_communication_time: z.string(),
            instant_power: z.number(),
            instant_reactive_power: z.number(),
            instant_apparent_power: z.number(),
            frequency: z.number(),
            energy_exported: z.number(),
            energy_imported: z.number(),
            instant_average_voltage: z.number(),
            instant_average_current: z.number(),
            i_a_current: z.number(),
            i_b_current: z.number().optional(),
            i_c_current: z.number().optional(),
            last_phase_voltage_communication_time: z.string(),
            v_l1n: z.number(),
            v_l2n: z.number().optional(),
            v_l3n: z.number().optional(),
            last_phase_power_communication_time: z.string(),
            real_power_a: z.number(),
            real_power_b: z.number().optional(),
            real_power_c: z.number().optional(),
            reactive_power_a: z.number(),
            reactive_power_b: z.number().optional(),
            reactive_power_c: z.number().optional(),
            last_phase_energy_communication_time: z.string(),
            serial_number: z.string(),
            version: z.string(),
            timeout: z.number(),
            instant_total_current: z.number(),
        }),
    }),
);
